name: Build and Push Docker Images to Production

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY_APP: ${{ secrets.ECR_REPOSITORY_BACKEND }}
      ECR_REPOSITORY_WEB: ${{ secrets.ECR_REPOSITORY_WEB }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2


      - name: Set image tag
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV


      - name: Build and push app-tier image to prod
        run: |
          REG="${{ steps.login-ecr.outputs.registry }}"
          docker build -t $ECR_REPOSITORY_BACKEND:$TAG ./app-tier
          docker tag  $ECR_REPOSITORY_BACKEND:$TAG $REG/$ECR_REPOSITORY_BACKEND:$TAG
          docker tag  $ECR_REPOSITORY_BACKEND:$TAG $REG/$ECR_REPOSITORY_BACKEND:prod-latest
          docker push $REG/$ECR_REPOSITORY_BACKEND:$TAG
          docker push $REG/$ECR_REPOSITORY_BACKEND:prod-latest


      - name: Build and push web-tier image to prod
        run: |
          REG="${{ steps.login-ecr.outputs.registry }}"
          docker build -t $ECR_REPOSITORY_WEB:$TAG ./web-tier
          docker tag  $ECR_REPOSITORY_WEB:$TAG $REG/$ECR_REPOSITORY_WEB:$TAG
          docker tag  $ECR_REPOSITORY_WEB:$TAG $REG/$ECR_REPOSITORY_WEB:prod-latest
          docker push $REG/$ECR_REPOSITORY_WEB:$TAG
          docker push $REG/$ECR_REPOSITORY_WEB:prod-latest
